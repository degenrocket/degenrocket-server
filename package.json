{
  "name": "degen-rocket-server",
  "version": "2.0.0-alpha",
  "license": "MIT",
  "description": "Spasm-compatible server",
  "main": "index.js",
  "_commentsAboutScripts": {
    "jest": {
      "runInBand": "Added to run tests sequentially to avoid parallel execution issues when testing the database."
    }
  },
  "scripts": {
    "dev-simple": "NODE_ENV=dev nodemon api/index.ts",
    "dev": "cross-env NODE_ENV=dev TS_NODE=true NODE_OPTIONS=\"-r ts-node/register\" node api/index.ts",
    "build": "rm -rf dist && npx tsc",
    "start": "nodemon dist/api/index.js",
    "test": "npm run build && cross-env NODE_ENV=dev jest --testTimeout=5000 --silent=false --verbose=false --forceExit --runInBand",
    "test-utils": "npm run build && cross-env NODE_ENV=dev jest ./helper/utils/utils.test.ts --testTimeout=5000 --silent=false --verbose=false --forceExit --runInBand",
    "test-sqlutils": "npm run build && cross-env NODE_ENV=dev jest ./helper/sql/sqlUtils.test.ts --testTimeout=5000 --silent=false --verbose=false --forceExit --runInBand",
    "test-current": "npm run build && cross-env NODE_ENV=dev jest ./helper/sql/submitSpasmEvent.test.ts --testTimeout=5000 --silent=false --verbose=false --forceExit --runInBand",
    "test-inspect": "npm run build && cross-env NODE_ENV=dev jest --testTimeout=5000 --detectOpenHandles --silent=false --verbose=false --runInBand",
    "test-watch": "npm run build && cross-env NODE_ENV=dev jest --testTimeout=5000 --detectOpenHandles --silent=false --verbose=false --watchAll --runInBand",
    "prod": "npm run build && npm run start-prod",
    "stage": "npm run build && npm run start-stage",
    "start-prod": "pm2 start ecosystem-prod.config.js",
    "start-stage": "pm2 start ecosystem-stage.config.js",
    "verify-db": "cross-env NODE_ENV=dev TS_NODE=true NODE_OPTIONS=\"-r ts-node/register\" node db/scripts/info/verify-db.ts",
    "display-stats-db": "cross-env NODE_ENV=dev TS_NODE=true NODE_OPTIONS=\"-r ts-node/register\" node db/scripts/info/display-stats-db.ts",
    "initialize-db": "cross-env NODE_ENV=dev TS_NODE=true NODE_OPTIONS=\"-r ts-node/register\" node db/scripts/setup/initialize-db.ts",
    "migrate": "cross-env NODE_ENV=dev TS_NODE=true NODE_OPTIONS=\"-r ts-node/register\" node db/scripts/migrations/v2/00_migrateToV2.ts"
  },
  "author": "",
  "private": "true",
  "dependencies": {
    "axios": "^1.6.3",
    "bech32": "^2.0.0",
    "bree": "^9.1.3",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "ethers": "^6.7.1",
    "express": "^4.18.2",
    "html-to-text": "^9.0.5",
    "isomorphic-dompurify": "^1.8.0",
    "lodash": "^4.17.21",
    "nostr-tools": "^1.17.0",
    "pg": "^8.11.3",
    "rss-parser": "^3.13.0",
    "spasm.js": "^2.0.0-alpha"
  },
  "devDependencies": {
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.5",
    "@types/supertest": "^6.0.2",
    "cross-env": "^7.0.3",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3"
  }
}
